//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CventRegManager.MRAProTechAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="apapwsSoap", Namespace="http://tempuri.org/")]
    public partial class apapws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public apapws() {
            this.Url = global::CventRegManager.Properties.Settings.Default.CventRegManager_MRAProTechAPI_apapws;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserInfo(string szUserID, string szRegType, string szSpouseRegFlag, string szFirstTimeFlag, string szVolunteerFlag, string szHeardAboutEvent, string szExcludeEmailFlag, string szAttendLuncheonFlag, string szNumTicketsPurchased, string szSponsorAwardTableFlag, string szPaymentMethod, string szRegID, string szJobTitle, string szPerID, System.DateTime szRegDate) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        szUserID,
                        szRegType,
                        szSpouseRegFlag,
                        szFirstTimeFlag,
                        szVolunteerFlag,
                        szHeardAboutEvent,
                        szExcludeEmailFlag,
                        szAttendLuncheonFlag,
                        szNumTicketsPurchased,
                        szSponsorAwardTableFlag,
                        szPaymentMethod,
                        szRegID,
                        szJobTitle,
                        szPerID,
                        szRegDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(string szUserID, string szRegType, string szSpouseRegFlag, string szFirstTimeFlag, string szVolunteerFlag, string szHeardAboutEvent, string szExcludeEmailFlag, string szAttendLuncheonFlag, string szNumTicketsPurchased, string szSponsorAwardTableFlag, string szPaymentMethod, string szRegID, string szJobTitle, string szPerID, System.DateTime szRegDate) {
            this.UpdateUserInfoAsync(szUserID, szRegType, szSpouseRegFlag, szFirstTimeFlag, szVolunteerFlag, szHeardAboutEvent, szExcludeEmailFlag, szAttendLuncheonFlag, szNumTicketsPurchased, szSponsorAwardTableFlag, szPaymentMethod, szRegID, szJobTitle, szPerID, szRegDate, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(
                    string szUserID, 
                    string szRegType, 
                    string szSpouseRegFlag, 
                    string szFirstTimeFlag, 
                    string szVolunteerFlag, 
                    string szHeardAboutEvent, 
                    string szExcludeEmailFlag, 
                    string szAttendLuncheonFlag, 
                    string szNumTicketsPurchased, 
                    string szSponsorAwardTableFlag, 
                    string szPaymentMethod, 
                    string szRegID, 
                    string szJobTitle, 
                    string szPerID, 
                    System.DateTime szRegDate, 
                    object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        szUserID,
                        szRegType,
                        szSpouseRegFlag,
                        szFirstTimeFlag,
                        szVolunteerFlag,
                        szHeardAboutEvent,
                        szExcludeEmailFlag,
                        szAttendLuncheonFlag,
                        szNumTicketsPurchased,
                        szSponsorAwardTableFlag,
                        szPaymentMethod,
                        szRegID,
                        szJobTitle,
                        szPerID,
                        szRegDate}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591